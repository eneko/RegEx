#if !canImport(ObjectiveC)
import XCTest

extension CaptureGroupTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__CaptureGroupTests = [
        ("testBackreferenceFirstGroup", testBackreferenceFirstGroup),
        ("testBackreferenceSecondGroup", testBackreferenceSecondGroup),
        ("testCapturingGroup", testCapturingGroup),
        ("testCaseInsensitiveGroup", testCaseInsensitiveGroup),
        ("testEmail", testEmail),
        ("testFailedBackreference", testFailedBackreference),
        ("testMissingGroupsACK", testMissingGroupsACK),
        ("testMissingGroups", testMissingGroups),
        ("testNamedGroups", testNamedGroups),
        ("testNestedGroups", testNestedGroups),
        ("testNonCapturingGroup", testNonCapturingGroup),
    ]
}

extension ExponentTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ExponentTests = [
        ("testExact", testExact),
        ("testExactFails", testExactFails),
        ("testExponents", testExponents),
        ("testExponentsStarStar", testExponentsStarStar),
    ]
}

extension IteratorTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__IteratorTests = [
        ("testIterator", testIterator),
        ("testOneByOne", testOneByOne),
    ]
}

extension NoOverlapTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__NoOverlapTests = [
        ("testNonOverlapping", testNonOverlapping),
        ("testNonOverlappingGroups", testNonOverlappingGroups),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(CaptureGroupTests.__allTests__CaptureGroupTests),
        testCase(ExponentTests.__allTests__ExponentTests),
        testCase(IteratorTests.__allTests__IteratorTests),
        testCase(NoOverlapTests.__allTests__NoOverlapTests),
    ]
}
#endif
